<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="dao.BankDAO">
<resultMap type="bankVO" id="bankMap">
   	    <result column ="phone_number" property="phoneNumber"/>
		<result column ="account_number" property="accountNumber"/>
		<result column ="account_password" property="accountPassword"/>
		<result column ="bank_code" property="bankCode"/>
		<result column ="bank_reg_date" property="bankRegDate"/>
		<result column ="balance" property="balance"/>
		<result column ="bank_alias" property="bankAlias"/>
		<result column ="transfer_limit" property="transferLimit"/>
		<result column ="bank_name" property="bankName"/>		
</resultMap>
	
	
	
	
	<insert id="insertBank" parameterType="bankVO">
		insert into account(phone_number,account_number,account_password,bank_code,balance,bank_alias,transfer_limit)
		values(#{phoneNumber},#{accountNumber},#{accountPassword},#{bankCode},#{balance},#{bankAlias},#{transferLimit})
	</insert>
	
	
	
	
	<select id="checkoutBank" parameterType="bankVO" resultMap="bankMap">
		select phone_number, account_number, account_password, A.bank_code as bank_code, bank_reg_date, balance, bank_alias, transfer_limit, B.bank_name as bankName 
		 	from account A, bank_code B 
		 	where A.bank_code=B.bank_code and A.phone_number=#{phoneNumber}
	</select>
	
	<select id="checkoutBKBank" parameterType="bankVO" resultMap="bankMap">
		select phone_number, account_number, account_password, A.bank_code as bank_code,  bank_reg_date, balance, bank_alias, transfer_limit, B.bank_name as bankName 
		 	from account@BK_BANK A, bank_code B 
		 	where A.bank_code=B.bank_code and A.phone_number=#{phoneNumber}
	</select>
	
	
	
  <select id="checkoutJHBank" parameterType="bankVO" resultMap="bankMap">
	select phone_number, account_number, account_password, A.bank_code as bank_code,  bank_reg_date, balance, bank_alias, transfer_limit, B.bank_name as bankName 
		 	from account@JH_BANK A, bank_code B 
		 	where A.bank_code=B.bank_code and A.phone_number=#{phoneNumber}
	</select>
	
	<select id="checkoutJBBank" parameterType="bankVO" resultMap="bankMap">
	select phone_number, account_number, account_password, A.bank_code as bank_code,  bank_reg_date, balance, bank_alias, transfer_limit, B.bank_name as bankName 
		 	from account@BERRY_BANK A, bank_code B 
		 	where A.bank_code=B.bank_code and A.phone_number=#{phoneNumber}
	</select>

	
	
	<select id="checkAccountBANK" parameterType="string" resultMap="bankMap">
		select PHONE_NUMBER,ACCOUNT_NUMBER,ACCOUNT_PASSWORD,BANK_CODE,BALANCE,BANK_ALIAS,TRANSFER_LIMIT
		  from account
		where account_number = #{anything}  
	</select>
	
	<select id="checkAccountBKBANK" parameterType="string" resultMap="bankMap">
		select PHONE_NUMBER,ACCOUNT_NUMBER,ACCOUNT_PASSWORD,BANK_CODE,BALANCE,BANK_ALIAS,TRANSFER_LIMIT
		 from account@BK_BANK
		where account_number = #{anything}  
	</select>
	
	
   <select id="checkAccountJBBANK" parameterType="string" resultMap="bankMap">
		select PHONE_NUMBER,ACCOUNT_NUMBER,ACCOUNT_PASSWORD,BANK_CODE,BALANCE,BANK_ALIAS,TRANSFER_LIMIT 
		from account@BERRY_BANK
		where account_number = #{anything}  
	</select>
	
	<select id="checkAccountJHBANK" parameterType="string" resultMap="bankMap">
		select PHONE_NUMBER,ACCOUNT_NUMBER,ACCOUNT_PASSWORD,BANK_CODE,BALANCE,BANK_ALIAS,TRANSFER_LIMIT 
		from account@JH_BANK
		where account_number = #{anything}  
	</select> 
	
	
	
	<select id="checkBankName" parameterType="string" resultMap="bankMap">
		select * from bank_code
		where bank_code = #{anything}  
	</select>
	
	
	
	
	
	<update id="transferToOtherAccountAtWithrawal" parameterType="map">
	 BEGIN
   		 UPDATE ACCOUNT@${withrawalBankName} SET BALANCE=BALANCE - to_number(#{tranAmount}) WHERE ACCOUNT_NUMBER = #{withrawalAccountNumber};
    	 UPDATE ACCOUNT SET BALANCE=BALANCE + to_number(#{tranAmount}) WHERE ACCOUNT_NUMBER = #{depositAccountNumber};
    	 INSERT INTO TRANSACTION_HISTORY(TRAN_NUM,DEPOSIT_ACCOUNT_NUM ,WITHRAWAL_ACCOUNT_NUM, DEPOSIT_NAME, WITHRAWAL_NAME,TRAN_AMOUNT,DEPOSIT_BANK_CODE,WITHRAWAL_BANK_CODE,PHONE_NUMBER)
    	 VALUES(TRAN_HISTORY_NUM.NEXTVAL,#{depositAccountNumber},#{withrawalAccountNumber},#{depositName},#{withrawalName},to_number(${tranAmount}),#{depositBankCode},#{withrawalBankCode},#{phoneNumber});
    	 INSERT INTO TRANSACTION_HISTORY@${withrawalBankName}(TRAN_NUM,DEPOSIT_ACCOUNT_NUM ,WITHRAWAL_ACCOUNT_NUM, DEPOSIT_NAME, WITHRAWAL_NAME,TRAN_AMOUNT,DEPOSIT_BANK_CODE,WITHRAWAL_BANK_CODE,PHONE_NUMBER)
    	 VALUES(TRAN_HISTORY_NUM.NEXTVAL@${withrawalBankName},#{depositAccountNumber},#{withrawalAccountNumber},#{depositName},#{withrawalName},to_number(${tranAmount}),#{depositBankCode},#{withrawalBankCode},#{phoneNumber});
    	 
    	 
    	 COMMIT;
	 EXCEPTION
     	WHEN OTHERS THEN 
    	 	ROLLBACK;
	 END;
	</update>
	
	
	
		
	<update id="transferToOtherAccountAllDifferent" parameterType="map">
	 BEGIN
   		 UPDATE ACCOUNT@${withrawalBankName} SET BALANCE = BALANCE - to_number(#{tranAmount}) WHERE ACCOUNT_NUMBER = #{withrawalAccountNumber};
    	 UPDATE ACCOUNT@${depositBankName} SET BALANCE=BALANCE + to_number(#{tranAmount}) WHERE ACCOUNT_NUMBER = #{depositAccountNumber};
    	 INSERT INTO TRANSACTION_HISTORY(TRAN_NUM,DEPOSIT_ACCOUNT_NUM ,WITHRAWAL_ACCOUNT_NUM, DEPOSIT_NAME, WITHRAWAL_NAME,TRAN_AMOUNT,DEPOSIT_BANK_CODE,WITHRAWAL_BANK_CODE,PHONE_NUMBER)
    	 VALUES(TRAN_HISTORY_NUM.NEXTVAL,#{depositAccountNumber},#{withrawalAccountNumber},#{depositName},#{withrawalName},to_number(${tranAmount}),#{depositBankCode},#{withrawalBankCode},#{phoneNumber});
    	 INSERT INTO TRANSACTION_HISTORY@${withrawalBankName}(TRAN_NUM,DEPOSIT_ACCOUNT_NUM ,WITHRAWAL_ACCOUNT_NUM, DEPOSIT_NAME, WITHRAWAL_NAME,TRAN_AMOUNT,DEPOSIT_BANK_CODE,WITHRAWAL_BANK_CODE,PHONE_NUMBER)
    	 VALUES(TRAN_HISTORY_NUM.NEXTVAL@${withrawalBankName},#{depositAccountNumber},#{withrawalAccountNumber},#{depositName},#{withrawalName},to_number(${tranAmount}),#{depositBankCode},#{withrawalBankCode},#{phoneNumber});
    	 INSERT INTO TRANSACTION_HISTORY@${depositBankName}(TRAN_NUM,DEPOSIT_ACCOUNT_NUM ,WITHRAWAL_ACCOUNT_NUM, DEPOSIT_NAME, WITHRAWAL_NAME,TRAN_AMOUNT,DEPOSIT_BANK_CODE,WITHRAWAL_BANK_CODE,PHONE_NUMBER)
    	 VALUES(TRAN_HISTORY_NUM.NEXTVAL@${depositBankName},#{depositAccountNumber},#{withrawalAccountNumber},#{depositName},#{withrawalName},to_number(${tranAmount}),#{depositBankCode},#{withrawalBankCode},#{phoneNumber});
    	
    	 
    	 COMMIT;
	 EXCEPTION
    	 WHEN OTHERS THEN 
    		 ROLLBACK;
	 END;
	</update>
	
	
	
	<update id="transferToOtherAccountAtDeposit" parameterType="map">
	 BEGIN
   		 UPDATE ACCOUNT SET BALANCE=BALANCE - to_number(#{tranAmount}) WHERE ACCOUNT_NUMBER = #{withrawalAccountNumber};
    	 UPDATE ACCOUNT@${depositBankName} SET BALANCE = BALANCE + to_number(#{tranAmount}) WHERE ACCOUNT_NUMBER = #{depositAccountNumber};
    	 INSERT INTO TRANSACTION_HISTORY(TRAN_NUM,DEPOSIT_ACCOUNT_NUM ,WITHRAWAL_ACCOUNT_NUM, DEPOSIT_NAME, WITHRAWAL_NAME,TRAN_AMOUNT,DEPOSIT_BANK_CODE,WITHRAWAL_BANK_CODE,PHONE_NUMBER)
    	 VALUES(TRAN_HISTORY_NUM.NEXTVAL,#{depositAccountNumber},#{withrawalAccountNumber},#{depositName},#{withrawalName},to_number(${tranAmount}),#{depositBankCode},#{withrawalBankCode},#{phoneNumber});
    	 INSERT INTO TRANSACTION_HISTORY@${depositBankName}(TRAN_NUM,DEPOSIT_ACCOUNT_NUM ,WITHRAWAL_ACCOUNT_NUM, DEPOSIT_NAME, WITHRAWAL_NAME,TRAN_AMOUNT,DEPOSIT_BANK_CODE,WITHRAWAL_BANK_CODE,PHONE_NUMBER)
    	 VALUES(TRAN_HISTORY_NUM.NEXTVAL@${depositBankName},#{depositAccountNumber},#{withrawalAccountNumber},#{depositName},#{withrawalName},to_number(${tranAmount}),#{depositBankCode},#{withrawalBankCode},#{phoneNumber});  	
    	 COMMIT;
	 EXCEPTION
     	WHEN OTHERS THEN 
    		 ROLLBACK;
	 END;
	</update>
	
	<update id="transferToOtherAccountAllSame" parameterType="map">
	 BEGIN
   		 UPDATE ACCOUNT SET BALANCE = BALANCE - to_number(#{tranAmount}) WHERE ACCOUNT_NUMBER = #{withrawalAccountNumber};
    	 UPDATE ACCOUNT SET BALANCE = BALANCE + to_number(#{tranAmount}) WHERE ACCOUNT_NUMBER = #{depositAccountNumber};
    	 INSERT INTO TRANSACTION_HISTORY(TRAN_NUM,DEPOSIT_ACCOUNT_NUM ,WITHRAWAL_ACCOUNT_NUM, DEPOSIT_NAME, WITHRAWAL_NAME,TRAN_AMOUNT,DEPOSIT_BANK_CODE,WITHRAWAL_BANK_CODE,PHONE_NUMBER)
    	 VALUES(TRAN_HISTORY_NUM.NEXTVAL,#{depositAccountNumber},#{withrawalAccountNumber},#{depositName},#{withrawalName},to_number(${tranAmount}),#{depositBankCode},#{withrawalBankCode},#{phoneNumber});
    	 COMMIT;
	 EXCEPTION
     	WHEN OTHERS THEN 
    	 	ROLLBACK;
	 END;
	</update>
	
	
	
	
		
	
	
	
	
</mapper>	